@import std://make.convo
@import ./convo/types.convo
@import ./convo/vars.convo


> app pocket-plumber
port: 3000
dir: '.'
httpRoot: 'pages'


// Marks the first build stage where documentation is generated
> stage docs-assets
model: 'gpt-4.1'


> target
in: 'convo/description.convo'
out: 'docs/app-description.md'
===
Generate a detailed description of the {{gameName}} game and include the following:
- List of features
- Short description of each screen
===

> target
in: 'convo/description.convo'
out: 'docs/theme.md'
===
Generate a detailed description of a theme for the {{gameName}} game using tailwinds utility classes.

General Theme: {{gameTheme}}
===


// Generates a screens.json file with a list of screens and routes.
// The `Screen` struct defines schema of the json values to be generated
> target
in: 'docs/app-description.md'
out: 'docs/screens.json'
outListType: Screen
===
Generate a list of screens based on the Screens section
===


// Generates a detailed description for each screen in the screens.json file
> target
context: array( 'docs/app-description.md' 'docs/theme.md' )
inputTag: 'screen'
inList: 'docs/screens.json'
outNameProp: 'path'
out: 'docs/screens/*.md'
===
Generate a detailed description of the screen in markdown format.
Include information about layout and functionality.
===



// Marks the second build stage where ui files are generated
// The ui stage will wait for all targets of the documentation stage to be generated
> stage ui
review: true
context: array('docs/app-description.md' 'docs/theme.md' 'Agents.md')

// Generates a .tsx page for each generated page description
> target
in: 'docs/screens/**.md'
out: 'pages/*.tsx'
model: 'gpt-5'
===
Create a next JS page based on context.
===
