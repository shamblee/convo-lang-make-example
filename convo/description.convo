@import ./vars.convo

> user
Create a detailed description for a marketing technology app called "{{appName}}".

Here is a short description of the app:
<short-description>
{{shortDescription}}
</short-description>
The app has an AI Assistant that is always open in a chat dialog displayed on the right side of the screen. The chat UI can be collapsed/hidden by the user, transitioning it to a toolbar on the right edge of the screen. The user can expand the chat again anytime. The AI Assistant is an agent that can provide analytical insights, query the profile database, create segments and lists, build messages and design automation flows on behalf of the user. Anything a user can do in the app, the AI Assistant should be able to execute as well.

There will be multiple sections, each with multiple screens:
- Analytics: data visualization (charts, graphs) of all aggregated user data. This section requires subpages or tabs to organize web, messaging, ecommerce and attribution analytics 
    - Web analytics: page views, new and unique sessions, form submissions, etc
    - Messaging (all channels): sent, opened, clicked, bounced, new subscribers, unsubscribers, etc
    - Ecommerce: adds-to-cart, favorites or saved products, iniated checkouts, abandoned checkouts, successful checkouts/purchases
    - Attribution: ROI metrics for messages, campaigns, and automation flows showing total revenue, total orders, average order value and more attributed to each message. Users should be able to select different messages or automation flows to analyze.
- Profiles: Users need a list view of all of their contacts with the most important info displayed, like first and last name, email address, phone number, subscription status, date created. Users also must be able to click into each contact/profile to view a detail page where they can manage user-event data (all user event data should be stored in a SQL database), basic contact information, demographic data, subscription status for three individual communications channels (email, sms, notifications), and high-level analytics like messages sent, messages opened, messages clicked, average order value, total lifetime value (revenue). 
- Query Builder: Users need a place where they can run SQL queries (searches) for profiles based on shared properties or attributes such as user-events like page views, form submissions, abandoned or successful checkouts; subscription status; or any other database field tied to a profile. Query Builder can be a separate section, built into the Profiles section or be integrated into the AI Assistant. Once the query is run, the results should be displayed on screen. The user should have the ability to modify the query, clear the query, export the results, delete the results or create a Segment. 
- Segments & Lists: Users need a place to import and manage lists of profiles. User must be able to add additional profiles to existing lists, merge lists, and delete lists. Users must be able to manage Segments, which are dynamic lists based on SQL queries the user has run and saved in the Query Builder section. The saved SQL query becomes a filter for the Segment (segment rules), essentially creating a list that updates as profiles meet the criteria. When profiles do not or no longer meet the criteria, they are excluded from the Segment. Users must be able to modify the segment rules at any time. 
- Forms: This section is where users can create web forms to embed on their brand websites. Firstly, users need a list or grid view of their forms where they can see all of the forms they've created. They should have the ability to duplicate and delete forms. 
    - Form Detail: Clicking into a form should take the user to a detail screen that displays the form name, an ai-generated description of the form, and a list of form submissions. At the top, the user should have a button or call-to-action to open in Studio. This will open the studio template where the user can build forms.
    - Form Submission Detail: Clicking on a form submission in the submission list should take the user to a subsmission detail screen where the meta data for the submission is displayed along with the form data transmitted. The ability to export or copy the data in JSON and XML format should be provided. The form submission data should include any information about the profile that submitted the form and a link back to the associated profile screen.
    - Studio: {{studio}} template for building HTML/CSS (flexbox) web forms
- Messages: This section is where users can create and manage messages. Users should have two subsections for Templates and Campaigns. 
    - Templates: has two tabs-Blocks and Messages-where users create universal content blocks which are small sections of reusable content. Users can access their library of Blocks inside the Studio experience. The Messages tab is where users create reusable email templates and unique email templates. Users have two options for templates-"modify template" allows them to edit the template itself; and "start from template" duplicates the template and allows them to start a creating a new message with that template as a starting point. Both tabs should have a folder system so users can move messages in and out of folders for organizational purposes. 
    - Campaigns: a screen where users can create folders (which represent campaigns) where they can add/organize message templates that are being used in a campaign or transactional automation flow. The campaign has no logic associated with it. However it can be referenced in the Messaging and Attribution sections in Analytics.
    - Studio: {{studio}} template for building HTML/CSS email layouts. 
- Automations: This section is where users can create and manage marketing automations. This section should have a list or grid where the user can access and manage their automations. Clicking into the automation should take the user to an Automation Detail screen.
    - Detail: High-level analytics for each automation including number of users in the flow, number of users that have completed the flow, and the last time/date the automation was triggered. At the top, a summary or description of the automation in plain english and below a tabbed list of profiles with tabs for profiles currently in the flow and profiles that have completed or exited the flow.
    - Studio: {{studio}} template for building automated sequences/flows for customer journeys based on conditional logic.
    - Decisioning Agents: The automations section should have a screen where users can see the decisioning agents they've set up. They should be able to click into the details of an agent and change its settings and review a reasoning log for transparency-called the agent inspector. This would provide a summary of each personalized send including the profile (first and last name, email address, phone number or device ID depending on channel used), communications channel used, message sent, any specific profile data used in consideration, and a natural language summary of the reasoning used to determine the best message, channel and time for this recipient. The log should provide this content for every send the agent triggers. The log can be long and scroll vertically. The ability for the user to filter activity by channel would be useful.
App theme: {{appTheme}}

Include a list of features.
- The app has two screen types/templates: the {{standard}} template is used by most screens, the {{studio}} template is used by the Form Builder, Message Builder and Automation Builder tools
- The app provides a tracking pixel to place on the brand/s website in order to create new profiles for each new visitor—or recognize returning visitors—and collect event data like clicks, page views, and session length, IP address and any other session data or web analytics that can be leverage for marketing purposes. 
- The app has ecommerce integrations for platforms like Shopify and Woo Commerce that enables collection of ecommerce user events and analytics
- Users can add custom fields to their database in order to collect new consumer attributes as profile properties
- The Profiles screen (list view) and detail screens for Segments and Lists have an option/CTA for data enrichment. Depending on where they engage this feature, the entire database, list or segment is synced to our partner, Spatial.ai, via API where data points are appended to profile records, providing much more data about the brand's customers. 
- The Automations section has a feature for adding Decisioning Agents. These are AI agents that use reasoning to determine the best message/offer (pulled from a specific message category), best time and best channel to send for each individual contact in its purvue. When creating a decisioning agent, the user selects the segment, list or entire database as the targets, the message category that the agent can pull messages from, the timing/frequency they want the agent to send at (daily, 2x weekly, monthly, etc.), and the outcomes that they want the agent to achieve. For outcomes, the user maps user-events to best, great, good, and bad rankings. The agent uses this to access its performance and learn which message, channel and time combinations work best for contacts/profiles with similar event history, attributes and properties. The agent's mission is to achieve the best outcome possible. The user can create as many agents as they want with each agent being responsible for a particular segment of the brand's marketing database. 

Layouts: 
{{default}} template is the standard, default template for most screens. 
    - The primary navigation is in a left side panel with links to the sections of the app. It should have icons with labels and the ability to collapse/hide the navigation panel to expand the main content area. In the collapsed/hidden state, only the icons should be visible in the left panel. Expanding the panel again should animate open and reveal the labels with the icons. At the top of the panel is the app icon, visible in expanded and collapsed states. At the bottom of the left side panel should be a user account link that can expand a submenu (accordion or popover) that gives the user access to their individual user profile settings, their brand account/workspace settings, support and sign out. 
    - The top bar of the template should be very minimal and display a breadcrumb trail component on the left and an alerts/notifications icon on the right side. The rest of the screen area is the main content area to be used for the screen components and the AI Assistant interface. 
{{studio}} template is an open-canvas UI similar to tools like Figma, Figjam, or Sketch where the canvas is where the design is visualized. There are 3 variants of this template that are unique to the sections of the app that use the template. The primary navigation is completely hidden in this screen template. The user must exit the studio template in order to return to a default screen template that displays the primary navigation panel. The screen template requires a floating left and right panel and a floating toolbar at the top. These panes and toolbars float above the canvas.
    - Message Studio: The left floating panel displays tabs for Details, Content and Layout. The right floating panel houses all of the controls and styles for the selected content block or, when no block is selected, displays global settings and styles for the template. The floating toolbar at the top (above the layout) should have buttons/icons for switching between mobile and desktop breakpoints, undo/redo, media library (triggers modal), message variant views (email, sms, notification), send test, save as draft, and publish.
        - Breakpoints: The HTML generated for email layouts should be responsive-horizontal columns should stack vertically on mobile and be set to fill 100% width of their parent container (respect parent padding). The breakpoint icons allow users to toggle between a desktop view (default view) and a mobile view where the viewpoint is constrained to typical mobile dimensions. A dropdown menu with a list of mobile devices and screen dimensions should allow the user to change the dimensions of the mobile viewport.
        - Left Panel: Tabs for Details, Content and Layout
            - Details: includes text inputs and dropdown menus for Message name/title and message category/folder (dropdown list of existing categories/folders created by user), then a divider and text inputs for subject line, preview text (1-2 sentences), and message description (ai-generated if none provided by user), toggle switches for message variants so users can indicate which channels this message is eligible for-when a variant is toggled on it can be sent to subscribers of that channel. A single message template can house three channel variants, eliminating the need for redunant message/channel management. Input field for "reply-to" email address. 
            - Content: includes a grid of icons and labels for each content block type that the user can add to/drag onto the canvas, such as headline (H1 through H6), text (body copy), image (opens media library modal-select from library, upload from computer or drag and drop), button, horizontal rule, column (content wrapper), section (column wrapper), table, icon (allows user to select from library of icons, including brand/social media icons). Then a divider and a list of universal content blocks (pre-built content) created by the user that can be added to the layout.
            - Layout: layers panel showing the heirarchy of all the content in the layout. This should be similar to the layers panel in Figma or comparable design software. Highlighting a layer in the panel should select and highlight the content on the canvas. Dragging a layer up or down in the panel should move/rearrange the content on the canvas.
        - Right Panel: Tabs for Styles and Designer
            - Styles: All of the controls (inputs, menus, selectors) available for a content block depending on its type. There should be controls for all CSS properties and values associated with the content type.
            - Designer: incorporate the AI Assistant into this tab so the user can ask for assistance in copywriting and design. The AI Assistant should be able to draft an initial concept of the user's desired message, including layout, brand colors, images, copywriting and calls-to-action based on a user prompt. The assistant should be able to make iterative changes to the copywriting and design based on user feedback. Once the user is satisfied, they can make manual adjustments using the Styles tab, send a test, save as draft, or publish.
            - Canvas: neutral background color, display message (or form) in center with no ability to scroll horizontally. Only allow vertical scrolling if content in canvas overflows.
    - Form Studio: This variant is the same as the Message Studio variant, with different content in the Details tab and an extra tab in the left panel for Target. 
        - Details: Input for Form name/title, form type selection (full page, popup modal, embed), height/width fields, display timing options (show form: immediately, after time delay, after scroll distance, after page views, on leave page), frequency (numerical input for number of days and checkbox for "Don't show again if submitted"), visibility (show form on: desktop, mobile, both and options for "Click outside form to close" with checkboxes for desktop and mobile), Insertion selector field (Setting an insertion selector will cause the form to be inserted into the element pointed to by the specified CSS selector), submission email (email address where form submissions notifications are sent)
        - Target: options for "Hide from existing profiles" (checkbox), inputs to enter included and excluded domains (which domains the form displays on), inputs to enter included and excluded paths (which specific paths the form displays on), inputs to enter included and excluded query parameters (which specific UTM parameters must or must not be present in the visitor's source URL in order for the form to display)
    - Automation Studio: This variant uses the same panels and toolbars, but has differnt tabs and content
        - Left Panel: Two tabs for Details and Nodes
            - Details: input field for Automation name/title
            - Nodes: similar to Messages and Forms variants, the nodes tab displays a grid of icons and labels for differnt nodes that can be added to/dragged onto the canvas. The nodes include three sections: Triggers, Targets and Actions. Trigger nodes include scheduled, event-based, and manual. Target nodes include profile, alt profile, email address, list, segment, array. And Action nodes include send message, time delay, add to list, remove from list, update profile. 
        - Right panel: Two tabs for Properties and Designer
            - Properties: inputs, menus and selectors for all node properties (to be provided)
            - Designer: incorporate the AI Assistant into this tab so the user can ask for assistance in building a logical flow for marketing campaigns or transactional flows (actions, timing, targets, etc)
        - Canvas: Same as message and form variants, except with the ability to scroll horizontally and vertically at all times. User should be able to pan around the canvas, similar to tools like Figma and FigJam. Nodes should be represented as cards with the most imporant info/settings displayed on the card (for example, a Send Message node should display the name of the message and the subject line). Nodes can be linked together/connected. Use a line connector line similar to tools like FigJam or Miro. Nodes can connect to multiple nodes. Each connector can include conditional logic (branch logic). 
        - Top toolbar: buttons/icons for undo/redo, save as draft, publish, and test logic.